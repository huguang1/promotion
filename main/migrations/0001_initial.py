# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-25 12:41
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='请设置活动名称', max_length=32, verbose_name='活动名称')),
                ('is_open', models.BooleanField(default=False, verbose_name='是否开启')),
                ('errmsg', models.CharField(default='活动还未开启', max_length=100, verbose_name='关闭提示')),
                ('start_time', models.DateTimeField(default=None, null=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(default=None, null=True, verbose_name='结束时间')),
            ],
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(default=None, verbose_name='礼品编号')),
                ('prize_name', models.CharField(max_length=64, verbose_name='礼品名称')),
                ('probability', models.IntegerField(default=0, verbose_name='中奖概率')),
                ('grade', models.CharField(max_length=32, verbose_name='分类')),
            ],
            options={
                'verbose_name': '奖品管理',
                'verbose_name_plural': '奖品管理',
            },
        ),
        migrations.CreateModel(
            name='Rec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=32, verbose_name='活动用户')),
                ('prizeName', models.CharField(max_length=64, verbose_name='奖品名称')),
                ('prizeId', models.IntegerField(default=None, null=True, verbose_name='奖品ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('sendTime', models.DateTimeField(default=None, null=True, verbose_name='发送时间')),
                ('isSend', models.IntegerField(choices=[(0, '未派送'), (1, '已派送'), (2, '锁定')], default=0, verbose_name='是否发送')),
                ('censor', models.CharField(max_length=32, null=True, verbose_name='派送人')),
                ('ip', models.GenericIPAddressField(verbose_name='抽奖IP')),
                ('type', models.IntegerField(choices=[(0, '自然抽奖'), (1, '内定抽奖'), (2, '后台添加')], default=0, verbose_name='抽奖方式')),
            ],
            options={
                'verbose_name': '活动记录',
                'verbose_name_plural': '活动记录',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=32, verbose_name='活动用户')),
                ('sequence', models.CharField(blank=True, default='', max_length=64, verbose_name='顺序')),
                ('flag', models.IntegerField(default=1, verbose_name='标记')),
                ('score', models.IntegerField(default=0, verbose_name='活动次数')),
                ('addTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('type', models.CharField(default='默认', max_length=32, verbose_name='类别')),
            ],
            options={
                'verbose_name': '用户设定',
                'verbose_name_plural': '用户设定',
            },
        ),
    ]
